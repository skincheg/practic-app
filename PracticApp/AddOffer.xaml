<Window x:Class="PracticApp.AddOffer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PracticApp"
        mc:Ignorable="d"
        Title="AddClient" Height="450" Width="800" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize" MouseDown="DragAndMoveWindow" Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="UpperButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#FF0091EA"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontFamily" Value="Alegreya Sans SC"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                           BorderThickness="0"                                  
                           Background="{TemplateBinding Background}"
                           CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  To="#FF00609B" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  To="#FF0091EA" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

                <EventTrigger RoutedEvent="Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  To="#FF002942" Duration="0:0:0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>

            </Style.Triggers>

        </Style>
        <local:RealtorsDataSet x:Key="realtorsDataSet"/>
        <CollectionViewSource x:Key="clientsViewSource" Source="{Binding Clients, Source={StaticResource realtorsDataSet}}"/>
        <CollectionViewSource x:Key="offerViewSource" Source="{Binding Offer, Source={StaticResource realtorsDataSet}}"/>
        <CollectionViewSource x:Key="realtorsViewSource" Source="{Binding Realtors, Source={StaticResource realtorsDataSet}}"/>
        <CollectionViewSource x:Key="realtyViewSource" Source="{Binding Realty, Source={StaticResource realtorsDataSet}}"/>

    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF97D9E1"/>
            <GradientStop Color="#FFD9AFD9" Offset="0.554"/>
            <GradientStop Color="#FFD8AFD9" Offset="0.547"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right">
            <StackPanel Orientation="Horizontal">
                <Button  Width="30" BorderBrush="#FFAC79B6" Background="Transparent" BorderThickness="1" FontSize="14" Click="HideWindow" >_</Button>
                <Button Width="30" BorderBrush="#FFAC79B6" Background="Transparent" BorderThickness="1" FontSize="14" Click="CloseWindow">X</Button>
            </StackPanel>
        </Grid>

        <Border Width="150" Height="420" BorderThickness="0,2,2,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="#FFAC79B6">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image Width="120" Source="Resources/logo.png"/>
            </Grid>
        </Border>

        <Border Width="650" Height="420" BorderThickness="0,2,0,0" Grid.Row="1" Grid.Column="1" BorderBrush="#FFAC79B6">

            <StackPanel Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Vertical" DataContext="{StaticResource offerViewSource}" >
                <Grid x:Name="grid1" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                </Grid>
                <StackPanel>
                    <DataGrid IsReadOnly="True"  SelectionChanged="offerDataGrid_SelectionChanged" HorizontalAlignment="Left" x:Name="offerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Height="130" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" Width="580">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="clientIDColumn" Binding="{Binding ClientID}" Header="Клиентт" Width="*"/>
                            <DataGridTextColumn x:Name="realtorIDColumn" Binding="{Binding RealtorID}" Header="Риэлтор" Width="*"/>
                            <DataGridTextColumn x:Name="realtyIDColumn" Binding="{Binding RealtyID}" Header="Недвижимость" Width="*"/>
                            <DataGridTextColumn x:Name="priceColumn" Binding="{Binding Price}" Header="Цена" Width="100"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" x:Name="grid2" DataContext="{StaticResource clientsViewSource}" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Label Width="100" Content="Клиент:" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"/>
                            <ComboBox x:Name="clientID" DisplayMemberPath="ID" HorizontalAlignment="Left" Height="23" ItemsSource="{Binding}" VerticalAlignment="Center" Width="120">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DataContext="{StaticResource realtorsViewSource}" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Label Width="100" Content="Риэлтор:" HorizontalAlignment="Left" Grid.Row="0" VerticalAlignment="Center"/>
                            <ComboBox x:Name="realtorID" DisplayMemberPath="ID" HorizontalAlignment="Left" Height="23" ItemsSource="{Binding}" VerticalAlignment="Center" Width="120">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" DataContext="{StaticResource realtyViewSource}" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Label Width="100" Content="Недвижимость:" HorizontalAlignment="Left" Grid.Row="0" VerticalAlignment="Center"/>
                            <ComboBox x:Name="realtyID" DisplayMemberPath="ID" HorizontalAlignment="Left" Height="23" ItemsSource="{Binding}" VerticalAlignment="Center" Width="120">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Label Content="Цена:" Width="100" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBox x:Name="price" Height="23" Width="120" />
                        </StackPanel>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                        <Button Style="{StaticResource UpperButton}"  Content="Сохранить изменения" Margin="0,0,10,0" Click="SaveDataGridChanges"/>
                        <Button Style="{StaticResource UpperButton}" Content="Добавить предложение" Margin="0,0,10,0" Click="AddOfferBtn" />
                        <Button Style="{StaticResource UpperButton}" Content="Удалить предложение" Click="DeleteOffer" />
                    </StackPanel>
                </StackPanel>
                
            </StackPanel>

        </Border>

    </Grid>
</Window>